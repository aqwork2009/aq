
** 修复双系统引导o
1） /etc/grub.d/40_custom

2） menuentry 'Windows 10'{
set root=(hd0,1)
chainloader +1
}

3） grub2-mkconfig -o /boot/grub2/grub.cfg

** 常用命令
打开当前文件夹 nautilus ./
source ~/.bashrc
/usr/bin/gnome-terminal


用命令:

文件和目录:
# cd -                                 返回上次所在目录
# cp -a dir1 dir2                 复制一个目录
# ls -a                                显示隐藏文件
# ls -l                                 显示详细信息
# ls -lrt                               按时间显示文件（l表示详细列表，r表示反向排序，t表示按时间排序）
# mkdir dir1 dir2                同时创建两个目录
# mkdir -p /tmp/dir1/dir2    创建一个目录树
# rm -rf dir1                       删除 'dir1' 目录及其子目录内容

查看文件内容:
# cat file1                          从第一个字节开始正向查看文件的内容
# head -2 file1                   查看一个文件的前两行
# more file1                       查看一个长文件的内容
# tac file1                          从最后一行开始反向查看一个文件的内容
# tail -3 file1                      查看一个文件的最后三行

文本处理:
# grep str /tmp/test            在文件 '/tmp/test' 中查找 "str"
# grep ^str /tmp/test           在文件 '/tmp/test' 中查找以 "str" 开始的行
# grep [0-9] /tmp/test         查找 '/tmp/test' 文件中所有包含数字的行
# grep str -r /tmp/*             在目录 '/tmp' 及其子目录中查找 "str"
# diff file1 file2                   找出两个文件的不同处
# sdiff file1 file2                 以对比的方式显示两个文件的不同

查找:

# find / -name file1                                                 从 '/' 开始进入根文件系统查找文件和目录

# find / -user user1                                                查找属于用户 'user1' 的文件和目录

# find /home/user1 -name \*.bin                            在目录 '/ home/user1' 中查找以 '.bin' 结尾的文件

# find /usr/bin -type f -atime +100                         查找在过去100天内未被使用过的执行文件

# find /usr/bin -type f -mtime -10                           查找在10天内被创建或者修改过的文件

# locate \*.ps                                                         寻找以 '.ps' 结尾的文件，先运行 'updatedb' 命令

# find -name '*.[ch]' | xargs grep -E 'expr'              在当前目录及其子目录所有.c和.h文件中查找 'expr'

# find -type f -print0 | xargs -r0 grep -F 'expr'        在当前目录及其子目录的常规文件中查找 'expr'

# find -maxdepth 1 -type f | xargs grep -F 'expr'    在当前目录中查找 'expr'

压缩和解压:

# bzip2 file1                                   压缩 file1

# bunzip2 file1.bz2                        解压 file1.bz2

# gzip file1                                     压缩 file1

# gzip -9 file1                                最大程度压缩 file1

# gunzip file1.gz                            解压 file1.gz

# tar -cvf archive.tar file1               把file1打包成 archive.tar

（-c: 建立压缩档案；-v: 显示所有过程；-f: 使用档案名字，是必须的，是最后一个参数）

# tar -cvf archive.tar file1 dir1        把 file1，dir1 打包成 archive.tar

# tar -tf archive.tar                         显示一个包中的内容

# tar -xvf archive.tar                      释放一个包

# tar -xvf archive.tar -C /tmp         把压缩包释放到 /tmp目录下

# zip file1.zip file1                          创建一个zip格式的压缩包

# zip -r file1.zip file1 dir1               把文件和目录压缩成一个zip格式的压缩包

# unzip file1.zip                             解压一个zip格式的压缩包到当前目录

# unzip test.zip -d /tmp/                 解压一个zip格式的压缩包到 /tmp 目录

yum工具:

# yum -y install [package]              下载并安装一个rpm包

# yum localinstall [package.rpm]    安装一个rpm包，使用你自己的软件仓库解决所有依赖关系

# yum -y update                              更新当前系统中安装的所有rpm包

# yum update [package]                 更新一个rpm包

# yum remove [package]                删除一个rpm包

# yum list                                        列出当前系统中安装的所有包

# yum search [package]                 在rpm仓库中搜寻软件包

# yum clean [package]                   清除缓存目录（/var/cache/yum）下的软件包

# yum clean headers                      删除所有头文件

# yum clean all                                删除所有缓存的包和头文件

网络:
# ifconfig eth0                                                                       显示一个以太网卡的配置
# ifconfig eth0 192.168.1.1 netmask 255.255.255.0            配置网卡的IP地址
# ifdown eth0                                                                        禁用 'eth0' 网络设备
# ifup eth0                                                                            启用 'eth0' 网络设备
# iwconfig eth1                                                                     显示一个无线网卡的配置
# iwlist scan                                                                         显示无线网络
# ip addr show                                                                     显示网卡的IP地址

其他:

# su -                                 切换到root权限（与su有区别）

# shutdown -h now           关机

# shutdown -r now            重启

# top                                  罗列使用CPU资源最多的linux任务 （输入q退出）

# pstree                             以树状图显示程序

# man ping                        查看参考手册（例如ping 命令）

# passwd                          修改密码

# df -h                               显示磁盘的使用情况

# cal -3                             显示前一个月，当前月以及下一个月的月历

# cal 10 1988                   显示指定月，年的月历

# date --date '1970-01-01 UTC 1427888888 seconds'   把一相对于1970-01-01 00:00的秒数转换成时间

常用快捷键:

       CentOS 6.4 中可以通过系统->首选项->键盘快捷键来设置快捷键，如图所示。例如可将运行终端的快捷键设为Ctrl+Alt+T。



**  mount linux windows
(1)源码（Stable Source Release 2015.3.14）下载：

wget https://tuxera.com/opensource/ntfs-3g_ntfsprogs-2015.3.14.tgz

(2)解压并编译安装：

tar -xzf ntfs-3g_ntfsprogs-2015.3.14.tgz

cd ntfs-3g_ntfsprogs-2015.3.14
./configure
make

make install   #非root 用户可使用 sudo make install 安装

(3)使用方法：

某一次的挂载：mount -t ntfs-3g /dev/DEVICE /mnt

（-t 指定挂载格式，DEVICE名称可以通过fdisk -l 去查找）

开机自动挂载：

 将 /dev/DEVICE /mnt ntfs-3g defaults 0 0 写入到 /etc/fstab 文件中

或者 echo "/dev/sda1 /mnt/windows ntfs-3g defaults 0 0 " >> /etc/fstab (注意使用 '>> ' 追加重定向，使用 '>' 会将/etc/fstab文件覆盖，当然，修改/etc/fstab 文件需要root 权限)


** 解压缩
tar zxvf ***..tar.gz


将/etc 目录压缩为etc.rar 命令为：
rar a etc.rar /etc
rar x etc.rar 
unrar -e etc.tar


** wine
Wine在CentOS 7-64位下安装全过程
原创 2014年12月23日 10:56:49

    标签：
    Wine CentOS 7 /
    64位 /
    安装 乱码

CentOS 7下安装最新的Wine（wine1.7.33）可谓一波三折，对于我这种菜鸟级别的人来说，真不好装！不过好在终于能够使用了。下面记录安装过程：以后有时间在详细叙说安装的各个步骤：

CentOS 7安装可以仿照：The right way to install Wine on CentOS 6 64bit 里面给出了详细步骤，下面就是仿照其安装的！

[johnnyhu@localhost 下载]$ su root
密码：
[root@localhost 下载]# wget http://citylan.dl.sourceforge.net/project/wine/Source/wine-1.7.33.tar.bz2
[root@localhost 下载]# tar -xf wine-1.7.33.tar.bz2
[root@localhost 下载]# yum -y groupinstall 'Development Tools'
[root@localhost 下载]# yum -y install libX11-devel freetype-devel
[root@localhost 下载]# yum install alsa-lib-devel.i686 libsndfile-devel.i686 readline-devel.i686 glib2.i686 glibc-devel.i686 libgcc.i686 libstdc++-devel.i686 pulseaudio-libs-devel.i686 cmake portaudio-devel.i686 openal-soft-devel.i686 audiofile-devel.i686 freeglut-devel.i686 lcms-devel.i686 libieee1284-devel.i686 openldap-devel.i686 unixODBC-devel.i686 sane-backends-devel.i686 fontforge libgphoto2-devel.i686 isdn4k-utils-devel.i686 mesa-libGL-devel.i686 mesa-libGLU-devel.i686 libXxf86dga-devel.i686 libXxf86vm-devel.i686 giflib-devel.i686 cups-devel.i686 gsm-devel.i686 libv4l-devel.i686 fontpackages-devel ImageMagick-devel.i686 openal-soft-devel.i686 libX11-devel.i686 docbook-utils-pdf libtextcat tex-cm-lgc

[root@localhost 下载]# yum install alsa-lib-devel audiofile-devel.i686 audiofile-devel cups-devel.i686 cups-devel dbus-devel.i686 dbus-devel fontconfig-devel.i686 fontconfig-devel freetype.i686 freetype-devel.i686 freetype-devel giflib-devel.i686 giflib-devel lcms-devel.i686 lcms-devel libICE-devel.i686 libICE-devel libjpeg-turbo-devel.i686 libjpeg-turbo-devel libpng-devel.i686 libpng-devel libSM-devel.i686 libSM-devel libusb-devel.i686 libusb-devel libX11-devel.i686 libX11-devel libXau-devel.i686 libXau-devel libXcomposite-devel.i686 libXcomposite-devel libXcursor-devel.i686 libXcursor-devel libXext-devel.i686 libXext-devel libXi-devel.i686 libXi-devel libXinerama-devel.i686 libXinerama-devel libxml2-devel.i686 libxml2-devel libXrandr-devel.i686 libXrandr-devel libXrender-devel.i686 libXrender-devel libxslt-devel.i686 libxslt-devel libXt-devel.i686 libXt-devel libXv-devel.i686 libXv-devel libXxf86vm-devel.i686 libXxf86vm-devel mesa-libGL-devel.i686 mesa-libGL-devel mesa-libGLU-devel.i686 mesa-libGLU-devel ncurses-devel.i686 ncurses-devel openldap-devel.i686 openldap-devel openssl-devel.i686 openssl-devel zlib-devel.i686 pkgconfig sane-backends-devel.i686 sane-backends-devel xorg-x11-proto-devel glibc-devel.i686 prelink fontforge flex bison libstdc++-devel.i686 pulseaudio-libs-devel.i686 gnutls-devel.i686 libgphoto2-devel.i686 openal-soft-devel openal-soft-devel.i686 isdn4k-utils-devel.i686 gsm-devel.i686 samba-winbind libv4l-devel.i686 cups-devel.i686 libtiff-devel.i686 gstreamer-devel.i686 gstreamer-plugins-base-devel.i686 gettext-devel.i686 libmpg123-devel.i686


[root@localhost 下载]# ls
FoxitReader-v1.1.zip  PDFStudio_v9_2_1_linux64.sh  wine-1.7.15  wine-1.7.15.tar.bz2  wine-1.7.33  wine-1.7.33.tar.bz2
[root@localhost 下载]# cd
[root@localhost ~]# mkdir wine64
[root@localhost ~]# ls
anaconda-ks.cfg  initial-setup-ks.cfg  perl5  wine64
[root@localhost ~]# cd wine64
[root@localhost wine64]# /home/johnnyhu/下载/wine-1.7.33/configure --enable-win64
[root@localhost wine64]# make > make.log 2>&1

[root@localhost wine64]# cd
[root@localhost ~]# mkdir wine32
[root@localhost ~]# ls
anaconda-ks.cfg  initial-setup-ks.cfg  perl5  wine32  wine64
[root@localhost ~]# cd wine32
[root@localhost wine32]# /home/johnnyhu/下载/wine-1.7.33/configure --enable-win32
[root@localhost wine32]# make > make.log 2>&1
[root@localhost wine32]# make install
[root@localhost wine32]# cd
[root@localhost ~]# cd wine64
[root@localhost wine64]# make install
[root@localhost wine64]# cd /home/johnnyhu/下载
[root@localhost 下载]# ls
FoxitReader-v1.1.zip  PDFStudio_v9_2_1_linux64.sh  wine-1.7.33
FoxitReader-Win.exe   wine-1.7.15                  wine-1.7.33.tar.bz2
[root@localhost 下载]# wine FoxitReader-Win.exe

注：这里我创建目录win32和win64时一时疏忽建在了root下，其实没必要，建在home下就可以了，好在不影响使用！


2. 以下是中文乱码时各种配置：


//  将simsun.ttc移动到/usr/share/wine/windows/中
[johnnyhu@localhost 下载]$ su root
密码：
[root@localhost 下载]# sudo mkdir -p /usr/share/wine/windows
[root@localhost 下载]# sudo mv simsun.ttc /usr/share/wine/windows/


//  配置Wine中文字体目录
[johnnyhu@localhost ~]$ cd ~/.wine
[johnnyhu@localhost ~]$ cd ~/.wine/drive_c
[johnnyhu@localhost drive_c]$ cd windows
[johnnyhu@localhost windows]$ cd fonts
bash: cd: fonts: 没有那个文件或目录
[johnnyhu@localhost windows]$ mkdir fonts
[johnnyhu@localhost windows]$ ls
command       help    notepad.exe  system32    twain_32.dll  win.ini
explorer.exe  hh.exe  regedit.exe  system.ini  twain.dll     winsxs
fonts         inf     rundll.exe   syswow64    winhelp.exe
Fonts         logs    system       temp        winhlp32.exe
[johnnyhu@localhost windows]$ cd fonts
[johnnyhu@localhost fonts]$ ln -s /usr/share/fonts/windows/simsun.ttc simsun.ttc
[johnnyhu@localhost fonts]$ ln -s /usr/share/fonts/windows/simsun.ttc simfang.ttc
[johnnyhu@localhost fonts]$ su root
密码：
[root@localhost fonts]# gedit ~/.wine/system.reg
[root@localhost fonts]# gedit ~/.wine/drive_c/windows/win.ini

[root@localhost ~]# cp -f /home/johnnyhu/zh.reg  ~/.wine/
[root@localhost ~]# ls ~/.wine
dosdevices  drive_c  system.reg  system.reg~  userdef.reg  user.reg  zh.reg

[root@localhost ~]# cd ~/.wine
[root@localhost .wine]# regedit zh.reg

[root@localhost drive_c]# cp -f /home/johnnyhu/下载/simsun.ttc windows/fonts
[root@localhost drive_c]# cd windows
[root@localhost windows]# ls
command       hh.exe         mono         system32      twain.dll     winsxs
explorer.exe  inf            notepad.exe  system.ini    winhelp.exe
fonts         Installer      regedit.exe  syswow64      winhlp32.exe
Fonts         logs           rundll.exe   temp          win.ini
help          Microsoft.NET  system       twain_32.dll  win.ini~
[root@localhost windows]# cd fonts
bash: cd: fonts: 不是目录

注：wine中文程序安装乱码的问题网上有很多教程，大体类似如：CentOS下Wine乱码解决办法  ，按照上面的，如果不出错的话，大体上就可以了！


3. 下面安装附件：

wine mono的安装 系统弹框之后自动安装完成，gecko 则自动安装失败，改手动安装。
//  安装win_gecko
[johnnyhu@localhost 下载]$  wget http://downloads.sourceforge.net/project/wine/Wine%20Gecko/2.34/wine_gecko-2.34-x86.msi
[johnnyhu@localhost 下载]$ su root
密码：
[root@localhost 下载]# sudo mkdir -p /usr/share/wine/gecko
[root@localhost 下载]#  sudo mv wine_gecko-2.34-x86.msi /usr/share/wine/gecko/
[root@localhost 下载]# ls /usr/share/wine/gecko/
wine_gecko-2.34-x86.msi
[root@localhost 下载]#

注：等所有的这些都完成之后，理论上点击右上脚的“应用程序” 里面会有wine 出现，这时就可以正常使用Wine了！

GOOD LUCK TO YOU！微笑
** vmware 
https://www.jianshu.com/p/520a09c3d808
地址：http://www.vmware.com/cn/products/workstation/workstation-evaluation.html 
yum -y install perl gcc kernel-devel libX11 libXinerama libXcursor libXtst
sh VMware-Workstation-xxxx-xxxx.bundle  
vmware-installer -u vmware-workstation
CG54H-D8D0H-H8DHY-C6X7X-N2KG6

ZC3WK-AFXEK-488JP-A7MQX-XL8YF

AC5XK-0ZD4H-088HP-9NQZV-ZG2R4

ZC5XK-A6E0M-080XQ-04ZZG-YF08D

ZY5H0-D3Y8K-M89EZ-AYPEG-MYUA8
** screenshot
捕获自定义区域 ：$ gnome-screenshot -a
捕获当前终端Terminal ： $ gnome-screenshot -w
捕获整个屏幕 ： $ gnome-screenshot
